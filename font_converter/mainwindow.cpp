#include "mainwindow.h"
#include "ui_mainwindow.h"

using namespace std;

#define MAX_NUMBER_CHARS 128
typedef CHARACTER_ENTRY CHARACTER_FONT[MAX_NUMBER_CHARS];

const CHARACTER_FONT FONT1 = {
//spanish characters occupy space from 1 to 32
        {23,  5,{0x50,0x23,0x18,0xc5,0xc0}},    // Ü   >
        {24,  1, {190}},    // ¡
    //	{25,  5,{0x27,0xa1,0x0f,0x43,0xc0}},     // É
        {25, 5, {15,225,15,195,224}},    //É
        {26,  5,{0x20,0x08,0x88,0xc5,0xc0}},   // ¿
        {27,  5,{81,35,154,206,32,0,157,24}},    // Ñ
        {28,  5,{0x24,0x63,0x18,0xc5,0xc0}},     // Ú
        {29,  5,{0x0b,0xa3,0x18,0xc5,0xc0}},     // Ó
        {30,  5,{0x0b,0x88,0x42,0x11,0xc0}},   // Í
        {31,  5,{0x13,0xa3,0x1f,0xc6,0x20}},   // Á

    {32,  5, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {33,  3, {0x49,0x24,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {34,  3, {0xB6,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {35,  5, {0x52,0xBE,0xAF,0xA9,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {36,  5, {0x23,0xE8,0xE2,0xF8,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {37,  5, {0xC6,0x44,0x44,0x4C,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {38,  5, {0x45,0x28,0x8A,0xC9,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {39,  3, {0x4A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {40,  3, {0x2A,0x48,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {41,  3, {0x88,0x92,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {42,  5, {0x25,0x5C,0x47,0x54,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {43,  5, {0x01,0x09,0xF2,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {44,  3, {0x00,0x04,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {45,  4, {0x00,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {46,  3, {0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {47,  5, {0x00,0x44,0x44,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {48,  5, {0x74,0x63,0x18,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},	//0
    {49,  5, {0x23,0x08,0x42,0x11,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {50,  5, {0x74,0x42,0x64,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {51,  5, {0x74,0x42,0x60,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {52,  5, {0x11,0x95,0x2F,0x88,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {53,  5, {0xFC,0x3C,0x10,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {54,  5, {0x74,0x61,0xE8,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {55,  5, {0xF8,0x42,0x22,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {56,  5, {0x74,0x62,0xE8,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {57,  5, {0x74,0x62,0xF0,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {58,  3, {0x01,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {59,  3, {0x01,0x04,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {60,  4, {0x12,0x48,0x42,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {61,  4, {0x00,0xF0,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {62,  4, {0x84,0x21,0x24,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {63,  5, {0x74,0x42,0x62,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {64,  5, {0x74,0x6B,0x5B,0xC1,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {65,  5, {0x74,0x63,0x1F,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00, 0x00}},	//A
    {66,  5, {0xF4,0x63,0xE8,0xC7,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    //B
    {67,  5, {0x74,0x61,0x08,0x45,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},	//C
    {68,  5, {0xF4,0x63,0x18,0xC7,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {69,  5, {0xFC,0x21,0xE8,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {70,  5, {0xFC,0x21,0xE8,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {71,  5, {0x74,0x61,0x78,0xC5,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {72,  5, {0x8C,0x63,0xF8,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {73,  3, {0xE9,0x24,0xB8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {74,  4, {0x11,0x11,0x19,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {75,  5, {0x8C,0xA9,0x8A,0x4A,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {76,  5, {0x84,0x21,0x08,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {77,  5, {0x8E,0xEB,0x18,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {78,  5, {0x8C,0x73,0x59,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {79,  5, {0x74,0x63,0x18,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {80,  5, {0xF4,0x63,0xE8,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {81,  5, {0x74,0x63,0x1A,0xC9,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {82,  5, {0xF4,0x63,0xEA,0x4A,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {83,  5, {0x7C,0x20,0xE0,0x87,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {84,  5, {0xF9,0x08,0x42,0x10,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {85,  5, {0x8C,0x63,0x18,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {86,  5, {0x8C,0x63,0x18,0xA8,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {87,  5, {0x8C,0x63,0x1A,0xD5,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {88,  5, {0x8C,0x54,0x45,0x46,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {89,  5, {0x8C,0x54,0x42,0x10,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {90,  5, {0xF8,0x44,0x44,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {91,  3, {0xF2,0x49,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {92,  5, {0x04,0x10,0x41,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {93,  3, {0xE4,0x92,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {94,  5, {0x22,0xA2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {95,  5, {0x00,0x00,0x00,0x03,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {96,  3, {0x88,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {97,  5, {0x00,0x1C,0x17,0xC5,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {98,  5, {0x84,0x2D,0x98,0xC7,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {99,  5, {0x00,0x1F,0x08,0x41,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {100,  5,{0x08,0x5B,0x38,0xC5,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {101,  5,{0x00,0x1D,0x1F,0xC1,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {102,  5,{0x32,0x50,0x8E,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {103,  5,{0x00,0x1D,0x17,0x85,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {104,  5,{0x84,0x2D,0x98,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {105,  3,{0x41,0x64,0xB8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {106,  4,{0x10,0x11,0x19,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {107,  4,{0x88,0x9A,0xCA,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {108,  3,{0x92,0x49,0x1A,0xD6,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {109,  5,{0x00,0x15,0x58,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {110,  5,{0x00,0x1D,0x18,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {111,  5,{0x00,0x1D,0x18,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {112,  5,{0x05,0xB3,0x1F,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {113,  5,{0x03,0x67,0x17,0x84,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {114,  5,{0x00,0x2D,0x98,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {115,  5,{0x00,0x1F,0x07,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {116,  5,{0x42,0x38,0x84,0x24,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {117,  5,{0x00,0x23,0x18,0xC5,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {118,  5,{0x00,0x23,0x18,0xA8,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {119,  5,{0x00,0x23,0x18,0xD5,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {120,  5,{0x00,0x22,0xA2,0x2A,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {121,  4,{0x09,0x97,0x19,0x63,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {122,  5,{0x00,0x3E,0x22,0x23,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {123,  4,{0x34,0x48,0x44,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {124,  3,{0x49,0x04,0x92,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {125,  4,{0xC2,0x21,0x22,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {126,  4,{0x0A,0x50,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {127,  5,{0x00,0x00,0x00,0x03,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},

    /* Spanish char */
    {225,  5,{0x13,0xa3,0x1f,0xc6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},   //A
    {237,  5,{0x0b,0x88,0x42,0x11,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},   //i
    {243,  5,{0x0b,0xa3,0x18,0xc5,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},   //o
    {250,  5,{0x24,0x63,0x18,0xc5,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //u
    {241,  5,{0x51,0x23,0x1c,0xd6,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //n
    {191,  5,{0x20,0x08,0x88,0xc5,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //?
    {233,  5,{0x27,0xa1,0x0f,0x43,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //e
    {161,  5,{0x20,0x08,0x42,0x10,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //!
    {252,  5,{0x50,0x23,0x18,0xc5,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //v
    {0,    5,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
};

const CHARACTER_FONT FONT2 = {
     {23, 7, {108,3,30,60,120,223,0}},    //Ü
     {24, 2, {207,252}},    //¡
     {25, 7, {7,255,6,15,248,63,128}},    	//É
     {26, 7, {48,0,195,12,120,223,0}},    	//¿
     {27, 7, {40,35,31,61,121,241,128}},    //Ñ
     {28, 7, {17,143,30,60,120,223,0}},    	//Ú
     {29, 7, {2,251,30,60,120,223,0}},    	//Ó
     {30, 5, {15,152,198,51,192}},    		//Í
     {31, 7, {8,251,30,63,248,241,128}},    //Á
    {32,  5,   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {33,  4,   {0x66,0x66,0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {34,  5,   {0xDE,0xF6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {35,  7,   {0x6C,0xDB,0xFB,0x6F,0xED,0x9B,0x00,0x00,0x00,0x00,0x00,0x00}},
    {36,  6,   {0x31,0xFB,0x1E,0x37,0xE3,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {37,  6,   {0xC7,0x31,0x8C,0x63,0x38,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {38,  6,   {0x23,0x6D,0x88,0xD7,0x23,0x40,0x00,0x00,0x00,0x00,0x00,0x00}},
    {39,  4,   {0x66,0xC8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {40,  6,   {0x31,0x8C,0x30,0xC1,0x83,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {41,  6,   {0x30,0x60,0xC3,0x0C,0x63,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {42,  6,   {0x32,0xD7,0x8C,0x7A,0xD3,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {43,  6,   {0x00,0xC3,0x3F,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {44,  4,   {0x00,0x03,0x36,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {45,  5,   {0x00,0x01,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {46,  4,   {0x00,0x00,0x06,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {47,  7,   {0x02,0x0C,0x30,0xC3,0x0C,0x30,0x00,0x00,0x00,0x00,0x00,0x00}},
    {48,  7,   {0x7D,0x8F,0x1E,0x3C,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {49,  6,   {0x31,0xC3,0x0C,0x30,0xCF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {50,  7,   {0x39,0x8C,0x18,0xC3,0x18,0x3F,0x80,0x00,0x00,0x00,0x00,0x00}},
    {51,  7,   {0xFE,0x0C,0x30,0xC0,0x78,0xCE,0x00,0x00,0x00,0x00,0x00,0x00}},
    {52,  7,   {0x1C,0x59,0x34,0x6F,0xE1,0x83,0x00,0x00,0x00,0x00,0x00,0x00}},
    {53,  7,   {0xFF,0x83,0xF0,0x30,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {54,  7,   {0x7D,0x8F,0x07,0xEC,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {55,  7,   {0x7E,0x0C,0x18,0x61,0x86,0x18,0x00,0x00,0x00,0x00,0x00,0x00}},
    {56,  8,   {0x7E,0xC3,0xC3,0x7E,0xC3,0xC3,0x7E,0x00,0x00,0x00,0x00,0x00}},
    {57,  7,   {0x7D,0x8F,0x1B,0xF0,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {58,  4,   {0x06,0x60,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {59,  4,   {0x00,0x60,0x66,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {60,  5,   {0x19,0x99,0x86,0x18,0x61,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {61,  4,   {0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {62,  5,   {0xC3,0x0C,0x33,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {63,  7,   {0x7D,0x8C,0x18,0xE1,0x80,0x06,0x00,0x00,0x00,0x00,0x00,0x00}},
    {64,  7,   {0x7D,0x8F,0x5E,0xBD,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0x00}},
    {65,  7,   {0x7D,0x8F,0x1E,0x3F,0xF8,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {66,  7,   {0xFD,0x8F,0x1F,0xEC,0x78,0xFF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {67,  7,   {0x7D,0x8F,0x06,0x0C,0x18,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {68,  7,   {0xFD,0x8F,0x1E,0x3C,0x78,0xFF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {69,  7,   {0xFF,0x83,0x07,0xEC,0x18,0x3F,0x80,0x00,0x00,0x00,0x00,0x00}},
    {70,  7,   {0xFF,0x83,0x07,0xEC,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00}},
    {71,  7,   {0x7D,0x8F,0x06,0xFC,0x78,0xDF,0x80,0x00,0x00,0x00,0x00,0x00}},
    {72,  7,   {0xC7,0x8F,0x1F,0xFC,0x78,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {73,  4,   {0xF6,0x66,0x66,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {74,  5,   {0x18,0xC6,0x31,0xED,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {75,  7,   {0xC7,0x9B,0x67,0x0D,0x99,0xB1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {76,  6,   {0xC3,0x0C,0x30,0xC3,0x0F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {77,  7,   {0xC7,0xDF,0xFE,0xBC,0x78,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {78,  7,   {0xC7,0xCF,0xDE,0xFC,0xF8,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {79,  7,   {0x7D,0x8F,0x1E,0x3C,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {80,  7,   {0xFD,0x8F,0x1F,0xEC,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00}},
    {81,  7,   {0x7D,0x8F,0x1E,0xBC,0xB8,0x9E,0x80,0x00,0x00,0x00,0x00,0x00}},
    {82,  7,   {0xFD,0x8F,0x1F,0xED,0x99,0xB1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {83,  6,   {0x7B,0x3C,0x1E,0x0F,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {84,  6,   {0xFC,0xC3,0x0C,0x30,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {85,  7,   {0xC7,0x8F,0x1E,0x3C,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {86,  7,   {0xC7,0x8F,0x1E,0x3C,0x6D,0x84,0x00,0x00,0x00,0x00,0x00,0x00}},
    {87,  7,   {0xC7,0x8F,0x1E,0x3D,0x7A,0xDB,0x00,0x00,0x00,0x00,0x00,0x00}},
    {88,  7,   {0xC7,0x8C,0xA0,0x82,0x98,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {89,  6,   {0xCF,0x37,0x8C,0x30,0xC3,0x0E,0x00,0x00,0x00,0x00,0x00,0x00}},
    {90,  6,   {0xFC,0x31,0x8C,0x63,0x0F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00}},
    {91,  4,   {0xFC,0xCC,0xCC,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {92,  6,   {0x03,0x06,0x0C,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {93,  4,   {0xF3,0x33,0x33,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {94,  7,   {0x10,0xDB,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {95,  7,   {0x00,0x00,0x00,0x00,0x00,0x3F,0x80,0x00,0x00,0x00,0x00,0x00}},
    {96,  4,   {0xC6,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {97,  7,   {0x00,0x78,0x1B,0xFC,0x78,0xDF,0x80,0x00,0x00,0x00,0x00,0x00}},
    {98,  7,   {0xC1,0x83,0x77,0x3C,0x78,0xFF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {99,  6,   {0x00,0x07,0xF0,0xC3,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {100,  7,  {0x06,0x0D,0xDE,0x7C,0x78,0xDF,0x80,0x00,0x00,0x00,0x00,0x00}},
    {101,  7,  {0x00,0x01,0xF6,0x3F,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0x00}},
    {102,  6,  {0x39,0xB6,0x18,0xF1,0x86,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {103,  6,  {0x00,0x07,0xF3,0xFC,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {104,  7,  {0xC1,0x83,0x06,0xEF,0x78,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {105,  4,  {0x60,0x6E,0x66,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {106,  5,  {0x18,0x06,0x31,0xED,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {107,  6,  {0xC3,0x0C,0xF6,0xF3,0x6C,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {108,  2,  {0xFF,0xFC,0xCF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {109,  7,  {0x00,0x03,0xBE,0xBD,0x7A,0xF5,0x80,0x00,0x00,0x00,0x00,0x00}},
    {110,  7,  {0x00,0x03,0x77,0x3C,0x78,0xF1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {111,  7,  {0x00,0x01,0xF6,0x3C,0x78,0xDF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {112,  7,  {0x01,0xBB,0xDE,0x3F,0xD8,0x30,0x00,0x00,0x00,0x00,0x00,0x00}},
    {113,  7,  {0x00,0xE7,0x6E,0x37,0xE0,0xC1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {114,  6,  {0x00,0x0D,0xB9,0xC3,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {115,  6,  {0x00,0x07,0xF0,0x78,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {116,  7,  {0x60,0xC3,0xC3,0x06,0x0C,0xCF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {117,  7,  {0x00,0x03,0x1E,0x3C,0x79,0xCE,0x80,0x00,0x00,0x00,0x00,0x00}},
    {118,  7,  {0x00,0x03,0x1E,0x3C,0x6D,0x84,0x00,0x00,0x00,0x00,0x00,0x00}},
    {119,  7,  {0x00,0x03,0x1E,0x3C,0x7A,0xDB,0x00,0x00,0x00,0x00,0x00,0x00}},
    {120,  7,  {0x00,0x03,0x1B,0x61,0x0D,0xB1,0x80,0x00,0x00,0x00,0x00,0x00}},
    {121,  6,  {0x03,0x3C,0xFF,0x0F,0x37,0xBF,0x80,0x00,0x00,0x00,0x00,0x00}},
    {122,  6,  {0x00,0x0F,0xC3,0x33,0x0F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {123,  5,  {0x3B,0x19,0x86,0x30,0xE1,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {124,  2,  {0xFC,0xFC,0x33,0x1B,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {125,  5,  {0xE1,0x8C,0x33,0x1B,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {126,  6,  {0x03,0x66,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {127,  0,  {0x00,0x00,0x00,0x00,0x0F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00}},

    /* Spanish char */
    {161, 2,  {0xcf,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {191, 6,  {0x30,0x03,0x10,0xcf,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {225, 6,  {0x11,0xec,0xf3,0xff,0x3c,0xc0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {233, 5,  {0x17,0xf1,0x8f,0x63,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {237, 4,  {0x20,0x66,0x66,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {241, 6,  {0x14,0xa8,0x3f,0xcf,0x3c,0xc0,0x00,0x00,0x00,0x00,0x00,0x00}},
    {243, 6,  {0x11,0xec,0xf3,0xcf,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {250, 6,  {0x10,0x0c,0xf3,0xcf,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00}},
    {252, 7,  {0x28,0x03,0x1e,0x3c,0x78,0xdf,0x00,0x00,0x00,0x00,0x00,0x00}},
    {0,    5,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
};

const CHARACTER_FONT FONT3 = {
        {23, 8, {102,0,195,195,195,195,195,195,255,126,0}},    //Ü
        {24, 3, {93,4,191,232}},    //¡
        {25, 8, {28,0,255,255,192,255,255,192,255,255,0}},    //É
        {26, 8, {24,24,0,24,48,96,195,195,255,126,0}},    //¿
        {27, 8, {20,8,195,227,243,219,207,199,195,195,0}},    //Ñ
        {28, 8, {24,195,195,195,195,195,195,195,255,126,0}},    //Ú
        {29, 8, {24,0,126,255,195,195,195,195,255,126,0}},    //Ó
        {30, 4, {96,255,102,102,255,0}},    //Í
        {31, 8, {12,0,126,255,195,195,255,255,195,195,0}},    //Á

   {32,  5, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {33,  2, {0xFF,0xFC,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {34,  5, {0xDE,0xF7,0xBD,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {35,  7, {0x6C,0xDB,0xFF,0xF6,0xDF,0xFF,0xB6,0x6C,0x00,0x00,0x00,0x00}},
   {36,  8, {0x18,0x7F,0xD8,0xD8,0x7E,0x1B,0x1B,0xFE,0x18,0x18,0x00,0x00}},
   {37,  7, {0x01,0x87,0x18,0x61,0x86,0x18,0x63,0x86,0x02,0x0E,0x00,0x00}},
   {38,  8, {0x78,0xCC,0xCC,0xCC,0x78,0x7B,0xCE,0xC6,0xDB,0x71,0x00,0x00}},
   {39,  5, {0x63,0x19,0xCC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {40,  5, {0x19,0x99,0x8C,0x63,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00}},
   {41,  5, {0xC3,0x0C,0x31,0x8C,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00}},
   {42,  8, {0x18,0xDB,0xFF,0x7E,0x18,0x7E,0xFF,0xDB,0x18,0x18,0x00,0x00}},
   {43,  6, {0x00,0x03,0x0C,0xFF,0xF3,0x0C,0x00,0x00,0x00,0x00,0x00,0x00}},
   {44,  3, {0x00,0x00,0xDB,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {45,  6, {0x00,0x00,0x00,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {46,  2, {0x00,0x03,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {47,  8, {0x00,0x01,0x03,0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00,0x00}},
   {48,  8, {0x7E,0xFF,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {49,  6, {0x31,0xCF,0x0C,0x30,0xC3,0x0C,0xFF,0xF0,0x00,0x00,0x00,0x00}},
   {50,  8, {0x7E,0xFF,0xC3,0x03,0x07,0x0E,0x1C,0x38,0x7F,0xFF,0x00,0x00}},
   {51,  8, {0xFF,0xFF,0x0E,0x1C,0x0E,0x07,0x03,0xC3,0xFF,0x7E,0x00,0x00}},
   {52,  8, {0x1C,0x3C,0x7C,0xEC,0xCC,0xFF,0xFF,0x0C,0x0C,0x0C,0x00,0x00}},
   {53,  8, {0xFF,0xFF,0xC0,0xC0,0xFE,0xFF,0x03,0xC3,0xFF,0x7E,0x00,0x00}},
   {54,  8, {0x7E,0xFF,0xC3,0xC0,0xFE,0xFF,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {55,  8, {0xFF,0xFF,0x03,0x03,0x07,0x0E,0x1C,0x38,0x70,0xE0,0x00,0x00}},
   {56,  8, {0x7E,0xFF,0xC3,0xC3,0x7E,0x7E,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {57,  8, {0x7E,0xFF,0xC3,0xC3,0xFF,0x7F,0x03,0xC3,0xFF,0xFE,0x00,0x00}},
   {58,  2, {0x03,0xCF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {59,  4, {0x00,0x33,0x03,0x33,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {60,  6, {0x1C,0xE7,0x38,0xC3,0x0E,0x1C,0x38,0x78,0x0C,0x06,0x00,0x00}},
   {61,  6, {0x00,0x00,0x3F,0xFC,0x0F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00}},
   {62,  6, {0xE1,0xC3,0x87,0x0C,0x31,0xCE,0x73,0x80,0x00,0x00,0x00,0x00}},
   {63,  8, {0x7E,0xFF,0xC3,0x03,0x0F,0x1E,0x18,0x00,0x18,0x18,0x00,0x00}},
   {64,  8, {0x7E,0xFF,0xC3,0xDB,0xDB,0xDF,0xDE,0xC0,0xFE,0x7E,0x00,0x00}},
   {65,  8, {0x7E,0xFF,0xC3,0xC3,0xFF,0xFF,0xC3,0xC3,0xC3,0xC3,0x00,0x00}},
   {66,  8, {0xFE,0xFF,0xC3,0xC3,0xFE,0xFF,0xC3,0xC3,0xFF,0xFE,0x00,0x00}},
   {67,  8, {0x7E,0xFF,0xC3,0xC3,0xC0,0xC0,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {68,  8, {0xFE,0xFF,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xFF,0xFE,0x00,0x00}},
   {69,  8, {0xFF,0xFF,0xC0,0xC0,0xFC,0xFC,0xC0,0xC0,0xFF,0xFF,0x00,0x00}},
   {70,  8, {0xFF,0xFF,0xC0,0xC0,0xFC,0xFC,0xC0,0xC0,0xC0,0xC0,0x00,0x00}},
   {71,  8, {0x7E,0xFF,0xC3,0xC0,0xCF,0xCF,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {72,  8, {0xC3,0xC3,0xC3,0xC3,0xFF,0xFF,0xC3,0xC3,0xC3,0xC3,0x00,0x00}},
   {73,  6, {0xFF,0xF3,0x0C,0x30,0xC3,0x0C,0xFF,0xF0,0x00,0x00,0x00,0x00}},
   {74,  7, {0x06,0x0C,0x18,0x30,0x60,0xF1,0xE3,0xFE,0xF8,0x00,0x00,0x00}},
   {75,  8, {0xC3,0xC6,0xCC,0xD8,0xF0,0xF0,0xD8,0xCC,0xC6,0xC3,0x00,0x00}},
   {76,  8, {0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xFF,0xFF,0x00,0x00}},
   {77,  8, {0xC3,0xE7,0xFF,0xDB,0xDB,0xC3,0xC3,0xC3,0xC3,0xC3,0x00,0x00}},
   {78,  8, {0xC3,0xC3,0xE3,0xF3,0xDB,0xCF,0xC7,0xC3,0xC3,0xC3,0x00,0x00}},
   {79,  8, {0x7E,0xFF,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {80,  8, {0xFE,0xFF,0xC3,0xC3,0xFF,0xFE,0xC0,0xC0,0xC0,0xC0,0x00,0x00}},
   {81,  8, {0x7E,0xFF,0xC3,0xC3,0xC3,0xC3,0xDB,0xCD,0xF6,0x7B,0x00,0x00}},
   {82,  8, {0xFE,0xFF,0xC3,0xC3,0xFF,0xFE,0xDC,0xCE,0xC7,0xC3,0x00,0x00}},
   {83,  8, {0x7E,0xFF,0xC3,0xC0,0xFE,0x7F,0x03,0xC3,0xFF,0x7E,0x00,0x00}},
   {84,  8, {0xFF,0xFF,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00,0x00}},
   {85,  8, {0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {86,  8, {0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0xC3,0x66,0x3C,0x18,0x00,0x00}},
   {87,  9, {0xC1,0xE0,0xF0,0x78,0x3C,0x1E,0x4F,0x77,0xFF,0x77,0x11,0x00}},
   {88,  8, {0xC3,0xE7,0x7E,0x3C,0x18,0x18,0x3C,0x7E,0xE7,0xC3,0x00,0x00}},
   {89,  8, {0xC3,0xC3,0x66,0x66,0x3C,0x3C,0x18,0x18,0x18,0x18,0x00,0x00}},
   {90,  8, {0xFF,0xFF,0x03,0x07,0x0E,0x1C,0x38,0x70,0xFF,0xFF,0x00,0x00}},
   {91,  5, {0xFF,0xF1,0x8C,0x63,0x18,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00}},
   {92,  8, {0x00,0xC0,0xE0,0x70,0x38,0x1C,0x0E,0x07,0x03,0x01,0x00,0x00}},
   {93,  5, {0xFF,0xC6,0x31,0x8C,0x63,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00}},
   {94,  8, {0x18,0x3C,0x66,0xC3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {95,  8, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00}},
   {96,  5, {0xC7,0x1C,0x71,0x80,0x00,0x00,0x3F,0xC3,0xFF,0x7E,0x00,0x00}},
   {97,  8, {0x00,0x00,0x7E,0x7F,0x03,0xFF,0xFF,0xC3,0xFF,0x7E,0x00,0x00}},
   {98,  8, {0xC0,0xC0,0xC0,0xFE,0xFF,0xC3,0xC3,0xC3,0xFF,0xFE,0x00,0x00}},
   {99,  8, {0x00,0x00,0x00,0x7F,0xFF,0xC0,0xC0,0xC0,0xFF,0x7F,0x00,0x00}},
   {100,  8, {0x03,0x03,0x03,0x7F,0xFF,0xC3,0xC3,0xC3,0xFF,0x7F,0x00,0x00}},
   {101,  8, {0x00,0x00,0x00,0x7E,0xFF,0xC3,0xFE,0xC0,0xFF,0x7F,0x00,0x00}},
   {102,  8, {0x1E,0x3F,0x33,0x30,0xFC,0xFC,0x30,0x30,0x30,0x30,0x00,0x00}},
   {103,  8, {0x00,0x00,0x7E,0xFF,0xC3,0xFF,0x7F,0x03,0x7F,0x7E,0x00,0x00}},
   {104,  8, {0xC0,0xC0,0xC0,0xCE,0xFF,0xF3,0xC3,0xC3,0xC3,0xC3,0x00,0x00}},
   {105,  6, {0x30,0xC0,0x1C,0xF3,0xC3,0x0C,0xFF,0xF0,0x00,0x00,0x00,0x00}},
   {106,  6, {0x0C,0x30,0x03,0x0C,0x3C,0xF3,0xFD,0xE0,0x00,0x00,0x00,0x00}},
   {107,  8, {0xC0,0xC0,0xC0,0xC6,0xCC,0xD8,0xF0,0xD8,0xCC,0xC6,0x00,0x00}},
   {108,  2, {0xFF,0xFF,0xF0,0xC3,0x0C,0x30,0xC3,0x00,0x00,0x00,0x00,0x00}},
   {109, 10, {0x00,0x00,0x00,0x00,0xCC,0xFF,0xF3,0x3C,0xCF,0x33,0xCC,0xF3,0x30,0x00}},
   {110,  8, {0x00,0x00,0x00,0xCE,0xDF,0xF3,0xE3,0xC3,0xC3,0xC3,0x00,0x00}},
   {111,  8, {0x00,0x00,0x00,0x7E,0xFF,0xC3,0xC3,0xC3,0xFF,0x7E,0x00,0x00}},
   {112,  8, {0x00,0x00,0x00,0xFE,0xFF,0xC3,0xFF,0xFE,0xC0,0xC0,0x00,0x00}},
   {113,  8, {0x00,0x00,0x00,0x7B,0xFF,0xC7,0xFF,0x7B,0x03,0x03,0x00,0x00}},
   {114,  8, {0x00,0x00,0x00,0xDE,0xFF,0xF3,0xE3,0xC0,0xC0,0xC0,0x00,0x00}},
   {115,  8, {0x00,0x00,0x00,0x7F,0xFF,0xC0,0x7E,0x03,0xFF,0xFE,0x00,0x00}},
   {116,  7, {0x00,0x01,0x83,0x0F,0x1E,0x18,0x36,0x7C,0x73,0x3E,0x00,0x00}},
   {117,  8, {0x00,0x00,0x00,0xC3,0xC3,0xC3,0xC3,0xC7,0xFF,0x7B,0x00,0x00}},
   {118,  7, {0x00,0x00,0x06,0x3C,0x78,0xF1,0xE3,0x6C,0x22,0x08,0x00,0x00}},
   {119,  8, {0x00,0x00,0x00,0xC3,0xC3,0xC3,0xDB,0xDB,0xDB,0x66,0x00,0x00}},
   {120,  8, {0x00,0x00,0x00,0xC3,0x66,0x3C,0x18,0x3C,0x66,0xC3,0x61,0x80}},
   {121,  6, {0x00,0x00,0x33,0xCF,0xF7,0xC3,0xFF,0xE0,0x00,0x00,0x00,0x00}},
   {122,  8, {0x00,0x00,0x00,0xFC,0xFC,0x0C,0x30,0xC0,0xFC,0xFC,0x00,0x00}},
   {123,  6, {0x1C,0xF3,0x0C,0x61,0x83,0x0C,0x3C,0x70,0x00,0x00,0x00,0x00}},
   {124,  4, {0x66,0x66,0x00,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {125,  6, {0xE3,0xC3,0x0C,0x18,0x63,0x0C,0xF3,0x80,0x00,0x00,0x00,0x00}},
   {126,  7, {0x00,0xC3,0xCC,0xF0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   {127,  0, {0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xC0,0x00,0x00,0x00}},

    /* Spanish char */
    {161, 2, {0xcf,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {191, 6, {0x30,0x03,0x0c,0x63,0x0c,0x73,0x6c,0xe0,0x00,0x00,0x00,0x00}},
    {225, 6, {0x08,0xc7,0xb3,0xcf,0x3f,0xf3,0xcf,0x30,0x00,0x00,0x00,0x00}},
    {233, 5, {0x17,0xff,0x8c,0x7b,0xd8,0xff,0xc0,0x00,0x00,0x00,0x00,0x00}},
    {237, 4, {0x20,0x66,0x66,0x66,0x6f,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {241, 6, {0x16,0xa8,0x3f,0xff,0x3c,0xf3,0xcf,0x30,0x00,0x00,0x00,0x00}},
    {243, 6, {0x08,0xc7,0xb3,0xcf,0x3c,0xf3,0x78,0xc0,0x00,0x00,0x00,0x00}},
    {250, 6, {0x10,0x0c,0xf3,0xcf,0x3c,0xff,0x78,0xc0,0x00,0x00,0x00,0x00}},
    {252, 7, {0x28,0x03,0x1e,0x3c,0x78,0xf1,0xf7,0x7c,0x70,0x00,0x00,0x00}},
    {0,    5,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
};

const CHARACTER_FONT FONT4 = {

    {23, 4, {144,153,153,96}},    //Ü
    {24, 1, {190}},    //¡
    {25, 4, {48,248,248,240}},    //É
    {26, 4, {32,36,137,96}},    //¿
    {27, 4, {96,157,185,144}},    //Ñ
    {28, 4, {48,153,153,96}},    //Ú
    {29, 4, {48,105,153,96}},    //Ó
    {30, 3, {35,164,184}},    //Í
    {31, 4, {48,105,249,144}},    //Á
    {32,  3, {0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {33,  1, {0xFA,0xF1,0x54,0x91,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00}},  //!
    {34,  3, {0xB6,0x80,0x04,0x95,0x47,0x04,0x00,0x00,0x00,0x00,0x00,0x00}},
    {35,  5, {0x52,0xBE,0xAF,0xA9,0x44,0x04,0x00,0x00,0x00,0x00,0x00,0x00}},
    {36,  4, {0x27,0xA6,0x3E,0x20,0x41,0x04,0x00,0x00,0x00,0x00,0x00,0x00}},
    {37,  4, {0xCD,0x36,0xCB,0x32,0x28,0x20,0x00,0x00,0x00,0x00,0x00,0x00}},
    {38,  4, {0x4A,0xA4,0xA9,0x68,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00}},
    {39,  1, {0xE0,0x0A,0x24,0x8A,0x18,0x3E,0x00,0x00,0x00,0x00,0x00,0x00}},	// '
    {40,  2, {0x6A,0xA4,0x88,0x90,0xA0,0xCF,0x80,0x00,0x00,0x00,0x00,0x00}},	// {
    {41,  2, {0x95,0x58,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    // }
    {42,  5, {0x25,0x5D,0xF7,0x54,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {43,  3, {0x01,0x74,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
   // {44,  2, {0x00,0x58,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {44,  3, {0x00,0x04,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    // ,
    {45,  3, {0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    // -
    {46,  1, {0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    // .
    {47,  3, {0x25,0x29,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    // /
    {48,  4, {0x69,0x99,0x99,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {49,  3, {0x59,0x24,0xB9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {50,  4, {0x69,0x12,0x48,0xF1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {51,  4, {0x69,0x16,0x19,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {52,  4, {0x13,0x59,0xF1,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {53,  4, {0xF8,0xE1,0x19,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {54,  4, {0x69,0x8E,0x99,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {55,  4, {0xF1,0x12,0x48,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {56,  4, {0x69,0x96,0x99,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {57,  4, {0x69,0x97,0x19,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {58,  1, {0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},    //:
    {59,  2, {0x04,0x5B,0x5B,0xC1,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {60,  4, {0x12,0x48,0x42,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {61,  3, {0x03,0x8E,0x01,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {62,  4, {0x84,0x21,0x24,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {63,  4, {0x69,0x12,0x40,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {64,  5, {0x74,0x6B,0x5B,0xC1,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {65,  4, {0x69,0x9F,0x99,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {66,  4, {0xE9,0x9E,0x99,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {67,  4, {0x69,0x88,0x89,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {68,  4, {0xE9,0x99,0x99,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {69,  4, {0xF8,0x8E,0x88,0xF1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {70,  3, {0xF2,0x79,0x20,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},   // F
    {71,  4, {0x69,0x8B,0x99,0x71,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {72,  4, {0x99,0x9F,0x99,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {73,  3, {0xE9,0x24,0xB9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {74,  4, {0xF2,0x22,0x2A,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {75,  4, {0x99,0xAC,0xA9,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {76,  4, {0x88,0x88,0x88,0xF1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {77,  5, {0x8E,0xEB,0x58,0xC6,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {78,  4, {0x9D,0xB9,0x99,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {79,  4, {0x69,0x99,0x99,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {80,  4, {0xE9,0x9E,0x88,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {81,  4, {0x69,0x99,0x9B,0x71,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {82,  4, {0xE9,0x9E,0xCA,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {83,  4, {0x69,0x86,0x19,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {84,  3, {0xE9,0x24,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {85,  4, {0x99,0x99,0x99,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {86,  5, {0x8C,0x63,0x18,0xA8,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {87,  5, {0x8C,0x63,0x5A,0xD5,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {88,  4, {0x99,0x66,0x69,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {89,  5, {0x8C,0x54,0x42,0x10,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {90,  4, {0xF1,0x24,0x88,0xF1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {91,  3, {0xF2,0x49,0x39,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {92,  3, {0x12,0x24,0x4A,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {93,  3, {0xE4,0x92,0x79,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {94,  5, {0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {95,  4, {0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {96,  2, {0x90,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},  //'
    {97,  4, {0x00,0x61,0x79,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {98,  4, {0x88,0xE9,0x99,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {99,  4, {0x00,0x78,0x88,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {100, 4, {0x11,0x79,0x99,0x71,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {101, 4, {0x00,0x69,0xF8,0x61,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {102,  4,{0x25,0x44,0xE4,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {103,  4,{0x06,0x99,0x71,0xE1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {104,  4,{0x88,0xE9,0x99,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {105,  1,{0x5E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},	// i
    {106,  3,{0x20,0x93,0x51,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {107,  4,{0x88,0x9A,0xCA,0x91,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {108,  1,{0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},   // l
    {109,  5,{0x00,0x15,0x58,0xC6,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {110,  4,{0x00,0x69,0x99,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {111,  4,{0x00,0x69,0x99,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {112,  4,{0x08,0xF9,0xF8,0x81,0x61,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {113,  4,{0x01,0xF9,0xF1,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {114,  4,{0x00,0xAD,0x88,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {115,  4,{0x00,0x78,0x61,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {116,  4,{0x44,0xE4,0x45,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {117,  4,{0x00,0x99,0x99,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {118,  5,{0x00,0x23,0x18,0xA8,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {119,  5,{0x00,0x23,0x18,0xD5,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {120,  5,{0x00,0x22,0xA2,0x2A,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {121,  4,{0x09,0x97,0x19,0x63,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {122,  4,{0x00,0xF1,0x24,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {123,  3,{0x29,0x44,0x89,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {124,  4,{0x00,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {125,  3,{0x89,0x14,0xA1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {126,  4,{0x0A,0x50,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, //?
    {127,  4,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},

    /* Spanish char */
    {161, 1, {0xbe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {191, 4, {0x20,0x68,0x95,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {225, 4, {0x26,0x99,0xf9,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {233, 3, {0x5e,0x69,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {237, 3, {0x41,0x24,0xb8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {241, 4, {0x38,0xf9,0x99,0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {243, 4, {0x16,0x99,0x99,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {250, 4, {0x20,0x99,0x99,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {252, 4, {0x90,0x99,0x99,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {0,   5,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
};

const CHARACTER_FONT FONT5 = {
            {23, 3, {0xB6,0xDE}},   //U
            {24, 3, {0xE9,0x2E}},   //i
            {25, 3, {0xF3,0x4E}},   //E
            {26, 3, {0xC5,0x04}},   //?
            {27, 4, {0x9D,0xB9,0x90}},   //N
            {28, 3, {0xB6,0xDE}},   //U
            {29, 3, {0x56,0xD4}},   //O
            {30, 3, {0xE9,0x2E}},   //i
            {31, 3, {0x56,0xFA}},   //A
            {32, 1, {0x00,0x00}},   //space
            {33, 1, {0xE8}},   //!
            {34, 3, {0xB4,0x00}},   //"
            {35, 5, {0x57,0xD5,0xF5}},   //#
            {36, 5, {0x7D,0x1C,0x5F,0x00}},   //$
            {37, 1, {0x00}},   //%
            {38, 5, {0x45,0x1B,0x26,0x80}},   //&
            {39, 1, {0xC0}},   //'
            {40, 2, {0x6A,0x40}},   //(
            {41, 2, {0x95,0x80}},   //)
            {42, 5, {0xAB,0xBE,0xEA,0x80}},   //*
            {43, 3, {0x0B,0xA0,0x00}},   //+
            {44, 2, {0x01,0x80}},   //,
            {45, 3, {0x03,0x80,0x00}},   //-
            {46, 1, {0x08}},   //.
            {47, 3, {0x29,0x48}},   ///
            {48, 3, {0x56,0xD4}},   //0
            {49, 3, {0x59,0x2E}},   //1
            {50, 3, {0xC5,0x4E}},   //2
            {51, 3, {0xC5,0x1C}},   //3
            {52, 3, {0x2E,0xF2}},   //4
            {53, 3, {0xF3,0x1C}},   //5
            {54, 3, {0x73,0x54}},   //6
            {55, 3, {0xE5,0x48}},   //7
            {56, 3, {0x55,0x54}},   //8
            {57, 3, {0x55,0x9C}},   //9
            {58, 1, {0x50}},   //:
            {59, 2, {0x11,0x80}},   //;
            {60, 3, {0x2A,0x22}},   //<
            {61, 3, {0x1C,0x70,0x00}},   //=
            {62, 3, {0x88,0xA8}},   //>
            {63, 3, {0xC5,0x04}},   //?
            {64, 1, {0x00}},   //@
            {65, 3, {0x56,0xFA}},   //A
            {66, 3, {0xD7,0x5C}},   //B
            {67, 3, {0x56,0x54}},   //C
            {68, 3, {0xD6,0xDC}},   //D
            {69, 3, {0xF3,0x4E}},   //E
            {70, 3, {0xF3,0x48}},   //F
            {71, 4, {0x78,0xB9,0x70}},   //G
            {72, 3, {0xB7,0xDA}},   //H
            {73, 3, {0xE9,0x2E}},   //I
            {74, 3, {0x24,0xD4}},   //J
            {75, 4, {0x9A,0xCA,0x90}},   //K
            {76, 3, {0x92,0x4E}},   //L
            {77, 5, {0x8E,0xEB,0x18,0x80}},   //M
            {78, 4, {0x9D,0xB9,0x90}},   //N
            {79, 3, {0x56,0xD4}},   //O
            {80, 3, {0xD7,0x48}},   //P
            {81, 4, {0x69,0x9A,0x50}},   //Q
            {82, 3, {0xD7,0x5A}},   //R
            {83, 3, {0x71,0x1C}},   //S
            {84, 3, {0xE9,0x24}},   //T
            {85, 3, {0xB6,0xDE}},   //U
            {86, 3, {0xB6,0xD4}},   //V
            {87, 5, {0x8C,0x6B,0xB8,0x80}},   //W
            {88, 3, {0xB5,0x5A}},   //X
            {89, 3, {0xB5,0x24}},   //Y
            {90, 3, {0xE5,0x4E}},   //Z
            {91, 2, {0xEA,0xC0}},   //[
            {92, 3, {0x89,0x12}},
            {93, 2, {0xD5,0xC0}},
            {94, 3, {0x54,0x00}},   //^
            {95, 3, {0x00,0x0E}},   //_
            {96, 2, {0x90,0x00}},   //`
            {97, 3, {0x56,0xFA}},   //a
            {98, 3, {0xD7,0x5C}},   //b
            {99, 3, {0x56,0x54}},   //c
            {100, 3, {0xD6,0xDC}},   //d
            {101, 3, {0xF3,0x4E}},   //e
            {102, 3, {0xF3,0x48}},   //f
            {103, 4, {0x78,0xB9,0x70}},   //g
            {104, 3, {0xB7,0xDA}},   //h
            {105, 3, {0xE9,0x2E}},   //i
            {106, 3, {0x24,0xD4}},   //j
            {107, 4, {0x9A,0xCA,0x90}},   //k
            {108, 3, {0x92,0x4E}},   //l
            {109, 5, {0x8E,0xEB,0x18,0x80}},   //m
            {110, 4, {0x9D,0xB9,0x90}},   //n
            {111, 3, {0x56,0xD4}},   //o
            {112, 3, {0xD7,0x48}},   //p
            {113, 4, {0x69,0x9A,0x50}},   //q
            {114, 3, {0xD7,0x5A}},   //r
            {115, 3, {0x71,0x1C}},   //s
            {116, 3, {0xE9,0x24}},   //t
            {117, 3, {0xB6,0xDE}},   //u
            {118, 3, {0xB6,0xD4}},   //v
            {119, 5, {0x8C,0x6B,0xB8,0x80}},   //w
            {120, 3, {0xB5,0x5A}},   //x
            {121, 3, {0xB5,0x24}},   //y
            {122, 3, {0xE5,0x4E}},   //z
            {123, 3, {0x6A,0x26}},   //{
            {124, 1, {0xF8}},   //|
            {125, 3, {0xC8,0xAC}},   //}
            {126, 4, {0xDB,0x00,0x00}},   //~

};

const CHARACTER_FONT FONT6 = {
            {23, 3, {0xB6,0xDE}},   //U
            {24, 3, {0xE9,0x2E}},   //i
            {25, 3, {0xF3,0x4E}},   //E
            {26, 3, {0xC5,0x04}},   //?
            {27, 4, {0x9D,0xB9,0x90}},   //N
            {28, 3, {0xB6,0xDE}},   //U
            {29, 3, {0x56,0xD4}},   //O
            {30, 3, {0xE9,0x2E}},   //i
            {31, 3, {0x56,0xFA}},   //A
            {32, 3, {0x00,0x00}},   //space
            {33, 1, {0xE8}},   //!
            {34, 3, {0xB4,0x00}},   //"
            {35, 5, {0x57,0xD5,0xF5}},   //#
            {36, 5, {0x7D,0x1C,0x5F,0x00}},   //$
            {37, 1, {0x00}},   //%
            {38, 5, {0x45,0x1B,0x26,0x80}},   //&
            {39, 1, {0xC0}},   //'
            {40, 2, {0x6A,0x40}},   //(
            {41, 2, {0x95,0x80}},   //)
            {42, 5, {0xAB,0xBE,0xEA,0x80}},   //*
            {43, 3, {0x0B,0xA0,0x00}},   //+
            {44, 2, {0x01,0x80}},   //,
            {45, 3, {0x03,0x80,0x00}},   //-
            {46, 1, {0x08}},   //.
            {47, 3, {0x29,0x48}},   ///
            {48, 3, {0xF6,0xDE}},   //0
            {49, 3, {0x59,0x2E}},   //1
            {50, 3, {0xC5,0x4E}},   //2
            {51, 3, {0xC5,0x1C}},   //3
            {52, 3, {0x2E,0xF2}},   //4
            {53, 3, {0xF3,0x1C}},   //5
            {54, 3, {0x73,0x54}},   //6
            {55, 3, {0xE5,0x48}},   //7
            {56, 3, {0x55,0x54}},   //8
            {57, 3, {0x55,0x9C}},   //9
            {58, 1, {0x50}},   //:
            {59, 2, {0x11,0x80}},   //;
            {60, 3, {0x2A,0x22}},   //<
            {61, 3, {0x1C,0x70,0x00}},   //=
            {62, 3, {0x88,0xA8}},   //>
            {63, 3, {0xC5,0x04}},   //?
            {64, 1, {0x00}},   //@
            {65, 3, {0xF7,0xDA}},   //A
            {66, 3, {0xD7,0x5C}},   //B
            {67, 3, {0xF6,0x5E}},   //C
            {68, 3, {0xD6,0xDC}},   //D
            {69, 3, {0xF3,0x4E}},   //E
            {70, 3, {0xF3,0x48}},   //F
            {71, 4, {0x78,0xB9,0x70}},   //G
            {72, 3, {0xB7,0xDA}},   //H
            {73, 3, {0xE9,0x2E}},   //I
            {74, 3, {0x24,0xD4}},   //J
            {75, 4, {0x9A,0xCA,0x90}},   //K
            {76, 3, {0x92,0x4E}},   //L
            {77, 5, {0x8E,0xEB,0x18,0x80}},   //M
            {78, 4, {0x9D,0xB9,0x90}},   //N
            {79, 3, {0xF6,0xDE}},   //O
            {80, 3, {0xF7,0xC8}},   //P
            {81, 4, {0x69,0x9A,0x50}},   //Q
            {82, 3, {0xF7,0x5A}},   //R
            {83, 3, {0xF3,0x9E}},   //S
            {84, 3, {0xE9,0x24}},   //T
            {85, 3, {0xB6,0xDE}},   //U
            {86, 3, {0xB6,0xD4}},   //V
            {87, 5, {0x8C,0x6B,0xB8,0x80}},   //W
            {88, 3, {0xB5,0x5A}},   //X
            {89, 3, {0xB5,0x24}},   //Y
            {90, 3, {0xE5,0x4E}},   //Z
            {91, 2, {0xEA,0xC0}},   //[
            {92, 3, {0x89,0x12}},
            {93, 2, {0xD5,0xC0}},
            {94, 3, {0x54,0x00}},   //^
            {95, 3, {0x00,0x0E}},   //_
            {96, 2, {0x90,0x00}},   //`
            {97, 3, {0xF7,0xDA}},   //a
            {98, 3, {0xD7,0x5C}},   //b
            {99, 3, {0xF6,0x5E}},   //c
            {100, 3, {0xD6,0xDC}},   //d
            {101, 3, {0xF3,0x4E}},   //e
            {102, 3, {0xF3,0x48}},   //f
            {103, 4, {0x78,0xB9,0x70}},   //g
            {104, 3, {0xB7,0xDA}},   //h
            {105, 3, {0xE9,0x2E}},   //i
            {106, 3, {0x24,0xD4}},   //j
            {107, 4, {0x9A,0xCA,0x90}},   //k
            {108, 3, {0x92,0x4E}},   //l
            {109, 5, {0x8E,0xEB,0x18,0x80}},   //m
            {110, 4, {0x9D,0xB9,0x90}},   //n
            {111, 3, {0xF6,0xDE}},   //o
            {112, 3, {0xF7,0xC8}},   //p
            {113, 4, {0x69,0x9A,0x50}},   //q
            {114, 3, {0xF7,0x5A}},   //r
            {115, 3, {0xF3,0x9E}},   //s
            {116, 3, {0xE9,0x24}},   //t
            {117, 3, {0xB6,0xDE}},   //u
            {118, 3, {0xB6,0xD4}},   //v
            {119, 5, {0x8C,0x6B,0xB8,0x80}},   //w
            {120, 3, {0xB5,0x5A}},   //x
            {121, 3, {0xB5,0x24}},   //y
            {122, 3, {0xE5,0x4E}},   //z
            {123, 3, {0x6A,0x26}},   //{
            {124, 1, {0xF8}},   //|
            {125, 3, {0xC8,0xAC}},   //}
            {126, 4, {0xDB,0x00,0x00}},   //~

};

const CHARACTER_FONT FONT7 = {    // 7 x 23
    {23, 7, {108,216,0,12,120,241,227,199,143,30,60,120,241,227,199,143,30,62,255,223,0}},    //Ü
    {24, 3, {11,160,18,73,127,255,255,255,208}},    //¡
    {25, 7, {12,48,0,15,255,240,96,193,131,6,15,255,240,96,193,131,6,12,31,255,128}},    //É
    {26, 7, {0,0,0,193,128,0,12,24,48,96,195,142,56,96,193,143,31,119,199,0,0}},    //¿
    {27, 7, {101,250,96,0,16,225,227,199,207,159,191,123,247,231,207,143,30,60,120,241,128}},    //Ñ
    {28, 7, {12,48,0,12,120,241,227,199,143,30,60,120,241,227,199,143,30,62,255,223,0}},    //Ú
    {29, 7, {12,48,0,7,223,251,227,199,143,30,60,120,241,227,199,143,30,62,255,223,0}},    //Ó
    {30, 4, {54,0,255,102,102,102,102,102,102,102,111,240}},    //Í
    {31, 7, {12,48,0,1,2,14,28,124,251,191,124,120,255,255,199,143,30,60,120,241,128}},    //Á
    {32, 5, {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},    //
    {33, 2, {63,255,255,252,3,240}},    //!
    {34, 6, {3,60,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},    //"
    {35, 7, {0,0,0,0,0,27,54,109,255,251,102,223,255,182,108,216,0,0,0,0,0}},    //#
    {36, 7, {16,32,227,239,250,244,232,209,225,193,193,195,197,139,151,175,251,227,130,4,0}},    //$
    {37, 7, {0,0,0,6,50,101,178,12,16,96,131,4,24,38,211,38,48,0,0,0,0}},    //%
    {38, 7, {0,0,0,3,141,177,227,108,112,195,141,145,99,194,133,153,249,144,0,0,0}},    //&
    {39, 2, {61,0,0,0,0,0}},    //'
    {40, 4, {1,19,54,108,204,204,204,204,102,51,17,0}},    //(
    {41, 4, {8,140,198,99,51,51,51,51,102,204,136,0}},    //)
    {42, 7, {0,0,0,0,0,4,8,146,168,231,243,138,164,136,16,0,0,0,0,0,0}},    //*
    {43, 6, {0,0,0,0,0,0,48,207,255,48,192,0,0,0,0,0,0,0}},    //+
    {44, 4, {0,0,0,0,0,0,0,0,0,3,54,192}},    //,
    {45, 6, {0,0,0,0,0,0,0,15,255,0,0,0,0,0,0,0,0,0}},    //-
    {46, 2, {0,0,0,0,0,60}},    //.
    {47, 7, {0,0,0,16,32,193,6,8,48,65,130,12,16,96,129,0,0,0,0,0,0}},    ///
    {48, 7, {56,251,190,60,120,241,227,199,143,30,60,120,241,227,199,143,30,62,239,142,0}},    //0
    {49, 6, {16,199,60,240,195,12,48,195,12,48,195,12,48,195,12,51,255,192}},    //1
    {50, 7, {56,251,190,60,96,193,131,14,24,112,195,134,28,48,225,131,6,12,31,255,128}},    //2
    {51, 7, {56,251,190,60,96,193,131,6,28,113,193,193,193,131,6,15,30,62,239,142,0}},    //3
    {52, 7, {12,24,48,225,195,143,30,60,217,179,108,217,191,255,12,24,48,96,193,131,0}},    //4
    {53, 7, {255,255,6,12,24,48,96,193,131,231,224,224,193,131,6,15,30,62,239,142,0}},    //5
    {54, 7, {56,251,190,60,120,48,96,193,131,231,236,248,241,227,199,143,30,62,239,142,0}},    //6
    {55, 7, {255,252,24,48,193,131,12,24,48,193,131,12,24,48,193,131,6,12,24,48,0}},    //7
    {56, 7, {56,251,190,60,120,241,227,199,221,241,199,221,241,227,199,143,30,62,239,142,0}},    //8
    {57, 7, {56,251,190,60,120,241,227,199,221,249,240,96,193,131,6,15,30,62,239,142,0}},    //9
    {58, 2, {0,15,0,3,192,0}},    //:
    {59, 4, {0,0,0,51,0,0,0,3,54,192,0,0}},    //;
    {60, 7, {6,12,56,97,195,14,24,112,195,134,14,12,28,24,56,48,112,96,224,193,128}},    //<
    {61, 6, {0,0,0,0,0,0,255,240,0,3,255,192,0,0,0,0,0,0}},    //=
    {62, 7, {193,131,131,7,6,14,12,28,24,56,48,225,135,12,56,97,195,14,24,48,0}},    //>
    {63, 7, {56,251,190,60,96,193,131,14,56,225,131,6,12,24,0,0,193,131,0,0,0}},    //?
    {64, 7, {0,0,0,0,0,14,34,131,6,109,90,181,103,192,128,128,248,0,0,0,0}},    //@
    {65, 7, {16,32,225,199,205,187,227,199,143,31,255,248,241,227,199,143,30,60,120,241,128}},    //A
    {66, 7, {249,251,62,60,120,241,227,199,159,247,207,217,241,227,199,143,30,60,255,190,0}},    //B
    {67, 7, {56,251,190,60,120,48,96,193,131,6,12,24,48,96,193,131,30,62,239,142,0}},    //C
    {68, 7, {249,251,62,60,120,241,227,199,143,30,60,120,241,227,199,143,30,60,255,190,0}},    //D
    {69, 7, {255,255,6,12,24,48,96,193,131,231,204,24,48,96,193,131,6,12,31,255,128}},    //E
    {70, 7, {255,255,6,12,24,48,96,193,131,231,204,24,48,96,193,131,6,12,24,48,0}},    //F
    {71, 7, {56,251,190,60,120,240,96,193,131,6,12,249,241,227,199,143,30,62,239,142,0}},    //G
    {72, 7, {199,143,30,60,120,241,227,199,143,255,252,120,241,227,199,143,30,60,120,241,128}},    //H
    {73, 4, {255,102,102,102,102,102,102,102,102,102,111,240}},    //I
    {74, 7, {6,12,24,48,96,193,131,6,12,24,48,96,193,131,6,15,30,62,239,142,0}},    //J
    {75, 7, {199,143,30,60,120,243,238,249,227,134,14,30,62,108,221,155,62,60,120,241,128}},    //K
    {76, 7, {193,131,6,12,24,48,96,193,131,6,12,24,48,96,193,131,6,12,31,255,128}},    //L
    {77, 7, {131,6,14,60,120,251,247,255,255,94,188,120,241,227,199,143,30,60,120,241,128}},    //M
    {78, 7, {135,14,30,60,120,249,243,247,239,126,252,249,241,227,199,143,30,60,120,241,128}},    //N
    {79, 7, {56,251,190,60,120,241,227,199,143,30,60,120,241,227,199,143,30,62,239,142,0}},    //O
    {80, 7, {249,251,62,60,120,241,227,199,159,255,236,24,48,96,193,131,6,12,24,48,0}},    //P
    {81, 7, {56,251,190,60,120,241,227,199,143,30,60,120,241,227,199,143,102,110,238,204,128}},    //Q
    {82, 7, {249,251,62,60,120,241,227,199,159,247,206,28,60,120,217,179,54,108,120,241,128}},    //R
    {83, 7, {56,251,190,60,56,48,96,193,193,193,193,193,193,131,6,14,30,62,239,142,0}},    //S
    {84, 8, {255,255,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24}},    //T
    {85, 7, {199,143,30,60,120,241,227,199,143,30,60,120,241,227,199,143,30,62,255,223,0}},    //U
    {86, 7, {199,143,30,60,120,241,227,199,143,30,60,120,241,227,238,217,241,195,130,4,0}},    //V
    {87, 7, {199,143,30,60,120,241,227,199,143,30,189,127,255,247,239,143,30,56,48,96,128}},    //W
    {88, 7, {199,143,30,54,205,155,54,56,112,224,131,135,14,54,108,217,182,60,120,241,128}},    //X
    {89, 7, {199,143,30,54,205,155,54,56,112,224,129,2,4,8,16,32,64,129,2,4,0}},    //Y
    {90, 7, {255,255,30,48,97,195,6,28,48,97,195,6,28,48,97,195,6,60,127,255,128}},    //Z
    {91, 4, {255,204,204,204,204,204,204,204,204,204,207,240}},    //[
    {92, 7, {0,0,4,8,24,16,48,32,96,64,192,129,129,3,2,4,0,0,0,0,0}},
    {93, 4, {255,51,51,51,51,51,51,51,51,51,63,240}},
    {94, 7, {0,32,227,108,112,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},    //^
    {95, 7, {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,255,128}},    //_
    {96, 4, {0,12,198,49,0,0,0,0,0,0,0,0}},    //`
    {97, 7, {0,0,0,0,0,0,0,0,0,0,7,223,225,131,54,255,60,60,239,205,128}},    //a
    {98, 7, {0,0,6,12,24,48,96,193,131,6,15,223,251,227,199,143,30,62,255,174,0}},    //b
    {99, 7, {0,0,0,0,0,0,0,0,0,0,3,143,187,227,193,131,6,62,239,142,0}},    //c
    {100, 7, {0,0,0,48,96,193,131,6,12,24,51,239,251,227,199,143,30,62,239,206,128}},    //d
    {101, 7, {0,0,0,0,0,0,0,0,0,0,3,143,187,227,255,255,6,14,239,142,0}},    //e
    {102, 7, {0,56,249,179,6,12,24,48,96,199,239,198,12,24,48,96,193,131,6,12,0}},    //f
    {103, 7, {0,0,0,0,0,0,0,0,0,0,3,175,251,227,238,252,232,24,127,223,0}},    //g
    {104, 7, {0,0,6,12,24,48,96,193,131,6,15,159,187,227,199,143,30,60,120,241,128}},    //h
    {105, 2, {0,15,0,255,255,252}},    //i
    {106, 4, {0,0,0,51,0,0,51,51,51,51,63,224}},    //j
    {107, 7, {0,0,6,12,24,48,96,193,131,6,12,121,182,120,225,131,135,141,153,177,128}},    //k
    {108, 2, {3,255,255,255,255,252}},    //l
    {109, 8, {0,0,0,0,0,0,0,0,0,0,0,0,128,182,201,201,201,201,201,201,201,201,201,0}},    //m
    {110, 6, {0,0,0,0,0,0,0,0,0,130,236,113,199,28,113,199,28,64}},    //n
    {111, 7, {0,0,0,0,0,0,0,0,0,0,3,143,187,227,199,143,30,62,239,142,0}},    //o
    {112, 7, {0,0,0,0,0,0,0,0,0,5,207,221,241,247,253,243,6,12,24,48,0}},    //p
    {113, 7, {0,0,0,0,0,0,0,0,0,1,215,253,241,247,126,124,24,48,96,193,128}},    //q
    {114, 6, {0,0,0,0,0,0,0,0,46,255,156,48,195,12,48,195,12,0}},    //r
    {115, 7, {0,0,0,0,0,0,0,0,0,1,247,252,48,112,120,120,56,48,255,190,0}},    //s
    {116, 6, {0,0,0,0,0,0,0,0,12,51,255,204,48,195,12,48,241,192}},    //t
    {117, 7, {0,0,0,0,0,0,0,0,0,0,12,120,241,227,199,143,30,62,255,222,128}},    //u
    {118, 7, {0,0,0,0,0,0,0,0,0,0,12,120,219,54,108,112,225,193,2,4,0}},    //v
    {119, 7, {0,0,0,0,0,0,0,0,0,0,12,120,241,235,215,255,255,124,120,224,128}},    //w
    {120, 7, {0,0,0,0,0,0,0,0,0,0,12,120,219,54,56,112,227,102,216,241,128}},    //x
    {121, 7, {0,0,0,0,0,0,0,0,0,0,12,120,219,54,56,112,195,6,24,48,0}},    //y
    {122, 7, {0,0,0,0,0,0,0,0,0,0,15,255,193,134,24,97,134,12,31,255,128}},    //z
    {123, 6, {12,115,140,48,195,12,49,206,56,112,195,12,48,195,12,56,112,192}},    //{
    {124, 2, {3,255,252,255,255,0}},    //|
    {125, 6, {195,135,12,48,195,12,48,225,199,56,195,12,48,195,12,115,140,0}},    //}
    {126, 7, {0,199,252,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}},    //~
};

const int gk_fontheights[7] = {7,7,10,7,5,5,23};

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    f_scene = new QGraphicsScene;
    ui->gView_Preview->setScene(f_scene);
    f_item = nullptr;
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::on_PB_ConvertAll_clicked()
{
    int font = 1;
    int character = 0;
    int j;
    QString filename;
    QImage temp_image;

    f_font1_images.clear();
    f_font2_images.clear();
    f_font3_images.clear();
    f_font4_images.clear();
    f_font5_images.clear();
    f_font6_images.clear();
    f_font7_images.clear();

    for(font = 1;font <= 7; font++)
    {
        for(j = 0;j < MAX_NUMBER_CHARS;j++)
        {
            switch(font)
            {
            case 1:
                character = FONT1[j].characterNumber;
                break;
            case 2:
                character = FONT2[j].characterNumber;
                break;
            case 3:
                character = FONT3[j].characterNumber;
                break;
            case 4:
                character = FONT4[j].characterNumber;
                break;
            case 5:
                character = FONT5[j].characterNumber;
                break;
            case 6:
                character = FONT6[j].characterNumber;
                break;
            case 7:
                character = FONT7[j].characterNumber;
                break;
            }

            filename.clear();

            filename = QString("font%1char%2.png").arg(font).arg(character);
            if(fConvertImage(font,character,filename,temp_image))
            {
                temp_image.save(filename,"png");
                switch(font)
                {
                case 1:
                    f_font1_images.push_back(temp_image);
                    break;
                case 2:
                    f_font2_images.push_back(temp_image);
                    break;
                case 3:
                    f_font3_images.push_back(temp_image);
                    break;
                case 4:
                    f_font4_images.push_back(temp_image);
                    break;
                case 5:
                    f_font5_images.push_back(temp_image);
                    break;
                case 6:
                    f_font6_images.push_back(temp_image);
                    break;
                case 7:
                    f_font7_images.push_back(temp_image);
                    break;
                }
            }
        }
    }

    //combine images into one font file.
    //test with font 1 first

    QPainter painter;
    int x = 0, y = 0, max_height = 0, max_width = 0,max_row_height = 0;
    int output_width = 0;

    int col = 0, row = 0;
    for(vector<QImage>::iterator it = f_font1_images.begin(); it != f_font1_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    QImage output(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font1_images.begin(); it != f_font1_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font1.png","png");

    //font 2
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font2_images.begin(); it != f_font2_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font2_images.begin(); it != f_font2_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font2.png","png");

    //font 3
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font3_images.begin(); it != f_font3_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font3_images.begin(); it != f_font3_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font3.png","png");

    //font 4
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font4_images.begin(); it != f_font4_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font4_images.begin(); it != f_font4_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font4.png","png");

    //font 5
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font5_images.begin(); it != f_font5_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font5_images.begin(); it != f_font5_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font5.png","png");

    //font 6
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font6_images.begin(); it != f_font6_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font6_images.begin(); it != f_font6_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font6.png","png");

    //font 7
    x = 0;
    y = 0;
    max_height = 0;
    max_width = 0;
    max_row_height = 0;
    output_width = 0;

    col = 0;
    row = 0;
    for(vector<QImage>::iterator it = f_font7_images.begin(); it != f_font7_images.end(); ++it)
    {
        temp_image = *it;
        output_width += temp_image.size().width() + 2;

        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        col++;
        if(col >= 10)
        {
           col = 0;
           row++;
           max_height += max_row_height + 2;
           max_row_height = 0;
           if(output_width > max_width)
           {
               max_width = output_width;
           }
           output_width = 0;
        }
    }
    output = QImage(max_width,max_height,QImage::Format_Mono);
    output.fill(1);

    max_height = 0;
    painter.begin(&output);
    row = 0;
    col = 0;
    for(vector<QImage>::iterator it = f_font7_images.begin(); it != f_font7_images.end(); ++it)
    {
        temp_image = *it;
        if(temp_image.size().height() > max_row_height)
        {
            max_row_height = temp_image.size().height();
        }
        painter.drawImage(x,y,temp_image);
        x = x + temp_image.size().width() + 2;
        col++;
        if(col >= 10)
        {
            col = 0;
            row++;
            x = 0;
            y += max_row_height + 2;
            max_row_height = 0;
        }
    }
    painter.end();

    x = output.size().width();
    y = output.size().height();

    output.save("font7.png","png");
}

bool MainWindow::fConvertImage(const int &font, const int &char_no, const QString &filename, QImage &image)
{
    uint8_t data[FONT_MAX_CHARACTER_SIZE], temp_data;
    int i,j,index=-1;

    int x,y;
    unsigned int pix;

    int char_width = 5;
    int height = 0;
    int clipped_height;

    vector<bool>all_zeroes;

    switch(font)
    {
    case 1:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT1[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT1[index].characterBitMap[i];
        }
        char_width = FONT1[index].characterWidth;
        break;
    case 2:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT2[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT2[index].characterBitMap[i];
        }
        char_width = FONT2[index].characterWidth;
        break;
    case 3:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT3[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT3[index].characterBitMap[i];
        }
        char_width = FONT3[index].characterWidth;
        break;
    case 4:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT4[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT4[index].characterBitMap[i];
        }
        char_width = FONT4[index].characterWidth;
        break;
    case 5:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT5[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT5[index].characterBitMap[i];
        }
        char_width = FONT5[index].characterWidth;
        break;
    case 6:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT6[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT6[index].characterBitMap[i];
        }
        char_width = FONT6[index].characterWidth;
        break;
    case 7:
        for(i=0;i<MAX_NUMBER_CHARS;i++)
        {
            if(FONT7[i].characterNumber == char_no)
            {
                index = i;
                break;
            }
        }

        for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
        {
            data[i] = FONT7[index].characterBitMap[i];
        }
        char_width = FONT7[index].characterWidth;
        break;
    }
    if(char_width == 0)
    {
        return false;
    }
    //height = (25 * 8) / char_width + (((25 * 8) % char_width) ? 1 : 0);
    height = gk_fontheights[font-1];
    image = QImage(char_width,height,QImage::Format_Mono);

    x = 0;
    y = 0;
    pix = 0;
    for(i=0;i<FONT_MAX_CHARACTER_SIZE;i++)
    {
        temp_data = data[i];
        for(j=0;j<8;j++)
        {
            pix = temp_data & 0x80;
            pix = pix ? 0 : 1;
            image.setPixel(x,y,pix);

            temp_data = temp_data << 1;
            x++;
            if(x >= char_width)
            {
                x = 0;
                y++;
                //use programatic fonts instead of calculated ones
                if(y >= gk_fontheights[font-1])
                {
                    i = FONT_MAX_CHARACTER_SIZE;
                    break;
                }
            }
        }
    }

//    if(f_item != nullptr)
//    {
//        f_scene->removeItem(f_item);
//        delete f_item;
//    }

//    f_item = new QGraphicsPixmapItem(QPixmap::fromImage(image));
//    f_scene->addItem(f_item);
//    f_scene->setSceneRect(0,0,char_width + 5, height + 5);

    return true;
}
